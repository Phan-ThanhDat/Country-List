{"version":3,"sources":["components/Typo/types.tsx","contexts/theme.context.tsx","hooks/useTheme.tsx","components/Card/Card.tsx","pages/Country/Country.module.tsx","components/Button/types.tsx","components/Typo/Typo.tsx","components/Button/Button.tsx","types.ts","redux/actions/countries.tsx","components/Loading/Loading.tsx","pages/Country/Country.tsx","pages/Countries/Countries.module.tsx","pages/Countries/Countries.tsx","components/Icons/Search.tsx","pages/Search/Search.tsx","hooks/useDispatchCountryList.tsx","components/Cart/Cart.tsx","pages/DrawerNav/DrawerNav.tsx","App.tsx","serviceWorker.ts","redux/reducers/product.ts","redux/reducers/ui.ts","redux/reducers/countries.tsx","redux/reducers/index.ts","redux/sagas/product.ts","redux/sagas/ui.ts","redux/utils/apis.tsx","redux/sagas/countries.tsx","redux/sagas/index.ts","redux/store.ts","index.tsx","components/Typo/Typo.module.css","components/Button/Button.module.css","components/Loading/Loading.module.css","components/Card/Card.module.css"],"names":["TypoColors","TypoVariants","TypoAlignment","THEME_DEFAULT_VALUE","theme","foreground","background","setCurrentTheme","ThemeContext","React","createContext","themeDefault","Card","children","className","others","clsx","styles","card","useStyles","makeStyles","wrapper","maxWidth","padding","display","justifyContent","boxSizing","alignItems","media","width","height","paddingLeft","paddingRight","margin","name","textDecoration","fontSize","cursor","button","ButtonVariants","Typo","this","props","align","color","black","variant","body1","tag","createElement","typo","getVariants","getColor","getAlign","inherit","white","greyDark","greyMedium","blue","red","h1","h2","h3","h4","h5","body2","subTitle","left","right","middle","Component","DialogType","Button","href","other","undefined","wrap","Icon","icon","Secondary","secondary","Primary","primary","big","getCountriesRequest","payload","next","nextError","type","uri","params","beforeCallType","successType","afterSuccess","afterError","Loading","classes","loader","Country","flag","region","languague","country","dispatchAddCountry","useDispatch","useState","loading","setLoading","loadingAddCountry","useSelector","state","list","useEffect","setTimeout","Typography","component","CardMedia","image","title","map","l","length","nativeName","onClick","console","log","root","flexDirection","border","Countries","input","searchTerm","renderCountries","c","key","languages","isNotRenderCountryList","replace","SearchIcon","viewBox","d","fill","fillRule","wrapperSearch","marginLeft","spacing","flex","iconButton","searchIcon","Search","handleSearchChangeProp","InputBase","placeholder","inputProps","onChange","e","value","target","IconButton","aria-label","preventDefault","useDispatchCountryLis","dispatch","cart","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerWidth","iconClose","drawerHeader","mixins","toolbar","Cart","open","setOpen","useTheme","dispatchInCart","inCart","edge","Drawer","anchor","paper","direction","Divider","List","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","TBar","appBarShift","easeOut","enteringScreen","content","flexGrow","marginTop","contentShift","PersistentDrawerLeft","setSearchTerm","setList","contryList","countries","CssBaseline","AppBar","position","Toolbar","noWrap","filterCountryListBySearchTerm","filter","toUpperCase","toLowerCase","includes","text","index","ListItem","ListItemIcon","ListItemText","App","setTheme","useCallback","currentTheme","Provider","DrawerNav","Boolean","window","location","hostname","match","product","action","find","p","id","findIndex","splice","defaultState","dialogOpen","ui","dialog","initialState","countryList","JSON","parse","stringify","data","retrievedObject","localStorage","getItem","setItem","createRootReducer","combineReducers","doSomethingWhenAddingProduct","takeLatest","doSomethingWhenDialogOpen","fetchGetCompanyDetail","axios","get","callApi","addCountryToCart","watchCountries","companiesSagas","put","call","fetchApi","response","error","delay","takeEvery","all","fork","rootSaga","productSagas","uiSagas","initState","store","sagaMiddleware","createSagaMiddleware","middlewares","thunk","composeEnhancers","compose","createStore","applyMiddleware","run","makeStore","WithProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.aaca2073.chunk.js","sourcesContent":["export enum TypoColors {\n  inherit = 'inherit',\n  black = 'black',\n  greyDark = 'greyDark',\n  greyMedium = 'greyMedium',\n  white = 'white',\n  blue = 'blue',\n  red = 'red',\n}\n\nexport enum TypoVariants {\n  h1 = 'h1',\n  h2 = 'h2',\n  h3 = 'h3',\n  h4 = 'h4',\n  h5 = 'h5',\n  body1 = 'body1',\n  body2 = 'body2',\n  button = 'button',\n  subTitle = 'subTitle',\n}\n\nexport enum TypoAlignment {\n  left = 'left',\n  right = 'right',\n  middle = 'middle',\n}\n","import React from 'react'\n\nexport interface ThemeContext {\n  theme: {}\n  setCurrentTheme: (current: any) => void\n}\n\nconst themes = {\n  light: {\n    foreground: '#000000',\n    background: '#eeeeee',\n  },\n  dark: {\n    foreground: '#ffffff',\n    background: '#222222',\n  },\n}\n\nexport const THEME_DEFAULT_VALUE = {\n  theme: themes.light,\n  setCurrentTheme: () => {},\n}\n\nexport const ThemeContext = React.createContext<ThemeContext>(\n  THEME_DEFAULT_VALUE\n)\n","import React, { useState } from 'react'\nimport { ThemeContext } from '../contexts/theme.context'\n\nconst themeDefault = {\n  foreground: '#000000',\n  background: '#eeeeee',\n}\n\nexport const useTheme = (): ThemeContext => {\n  const [theme, setTheme] = useState(themeDefault)\n\n  const setCurrentTheme = React.useCallback((currentTheme): void => {\n    setTheme(currentTheme)\n  }, [])\n\n  return {\n    theme,\n    setCurrentTheme,\n  }\n}\n","import React, {\n  ReactNode,\n  AllHTMLAttributes,\n  ReactElement,\n  ReactChildren,\n} from 'react'\n\nimport styles from './Card.module.css'\nimport clsx from 'clsx'\n\nexport interface ICardProps extends AllHTMLAttributes<HTMLDivElement> {\n  children: ReactNode | ReactElement | ReactChildren | JSX.Element\n  className?: string\n}\n\nconst Card: React.FC<ICardProps> = ({\n  children,\n  className,\n  ...others\n}: ICardProps) => {\n  return (\n    <div className={clsx(styles.card, className)} {...others}>\n      {children}\n    </div>\n  )\n}\n\nexport default Card\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    wrapper: {\n      maxWidth: '1280',\n      padding: 0,\n      display: 'flex',\n      justifyContent: 'space-between',\n      boxSizing: 'border-box',\n      alignItems: 'center',\n    },\n    media: {\n      width: 160,\n      height: 64,\n      paddingLeft: '32px',\n      paddingRight: '32px',\n      margin: 0,\n    },\n    name: {\n      textDecoration: 'none',\n      fontSize: '1rem',\n      cursor: 'pointer',\n      paddingLeft: '32px',\n      paddingRight: '32px',\n      width: '10rem',\n    },\n    button: {\n      // marginLeft: 'auto',\n      paddingLeft: '32px',\n      paddingRight: '32px',\n    },\n  }\n})\n\nexport default useStyles\n","export enum ButtonVariants {\n  Primary = 'primary',\n  Secondary = 'secondary',\n  Icon = 'icon',\n}\n","import { ReactNode, createElement, AllHTMLAttributes, Component } from 'react'\nimport clsx from 'clsx'\nimport { TypoColors, TypoVariants, TypoAlignment } from './types'\n\nimport styles from './Typo.module.css'\n\nexport interface TypoProps<T> extends AllHTMLAttributes<T> {\n  children?: ReactNode\n  align?: TypoAlignment\n  className?: string\n  color?: TypoColors\n  variant?: TypoVariants\n  tag?: string\n}\n\nexport default class Typo<T = HTMLSpanElement> extends Component<TypoProps<T>> {\n  private static getColor(color: string) {\n    switch (color) {\n    case TypoColors.inherit:\n      return styles.inherit\n    case TypoColors.black:\n      return styles.black\n    case TypoColors.white:\n      return styles.white\n    case TypoColors.greyDark:\n      return styles.greyDark\n    case TypoColors.greyMedium:\n      return styles.greyMedium\n    case TypoColors.blue:\n      return styles.blue\n    case TypoColors.red:\n      return styles.red\n    default:\n      return styles.black\n    }\n  }\n\n  private static getVariants(variant: string) {\n    switch (variant) {\n    case TypoVariants.h1:\n      return styles.h1\n    case TypoVariants.h2:\n      return styles.h2\n    case TypoVariants.h3:\n      return styles.h3\n    case TypoVariants.h4:\n      return styles.h4\n    case TypoVariants.h5:\n      return styles.h5\n    case TypoVariants.body1:\n      return styles.body1\n    case TypoVariants.body2:\n      return styles.body2\n    case TypoVariants.button:\n      return styles.button\n    case TypoVariants.subTitle:\n      return styles.subTitle\n    default:\n      return styles.body1\n    }\n  }\n\n  private static getAlign(align: string) {\n    switch (align) {\n    case TypoAlignment.left:\n      return styles.left\n    case TypoAlignment.right:\n      return styles.right\n    default:\n      return styles.middle\n    }\n  }\n\n  public render() {\n    const {\n      children,\n      align = 'left',\n      color = TypoColors.black,\n      variant = TypoVariants.body1,\n      tag = 'span',\n      className,\n      ...others\n    } = this.props\n\n    return createElement(\n      tag,\n      {\n        ...others,\n        className: clsx(\n          styles.typo,\n          className,\n          Typo.getVariants(variant),\n          Typo.getColor(color),\n          Typo.getAlign(align)\n        ),\n      },\n      children\n    )\n  }\n}\n","import React, { AllHTMLAttributes, ReactNode } from 'react'\nimport clsx from 'clsx'\n\nimport Typo from '../Typo'\nimport styles from './Button.module.css'\nimport { ButtonVariants } from './types'\n\nimport { TypoVariants, TypoColors, TypoAlignment } from '../Typo'\n\nexport interface IButtonProps\n  extends AllHTMLAttributes<HTMLButtonElement | HTMLAnchorElement> {\n  children: ReactNode\n  /** Class name append to root button */\n  className?: string\n  variant?: ButtonVariants\n  display?: 'big'\n  href?: string\n}\n\nconst Button = ({\n  children,\n  className,\n  variant,\n  display,\n  href,\n  ...other\n}: IButtonProps) => (\n  <Typo<HTMLButtonElement | HTMLAnchorElement>\n    {...other}\n    tag={undefined === href ? 'button' : 'a'}\n    color={TypoColors.inherit}\n    variant={TypoVariants.button}\n    align={TypoAlignment.middle}\n    href={href}\n    className={clsx(\n      styles.wrap,\n      className,\n      variant === ButtonVariants.Icon && styles.icon,\n      variant === ButtonVariants.Secondary && styles.secondary,\n      variant === ButtonVariants.Primary && styles.primary,\n      display === 'big' && styles.big\n    )}\n  >\n    {children}\n  </Typo>\n)\n\nexport default Button\n","import { nativeName } from './pages/Country/Country'\n\n// Action types\nexport const ADD_PRODUCT = 'ADD_PRODUCT'\nexport const REMOVE_PRODUCT = 'REMOVE_PRODUCT'\nexport const TOGGLE_DIALOG = 'TOGGLE_DIALOG'\nexport const FETCH_COUNTRIES_REQUESTED = 'FETCH_COUNTRIES_REQUESTED'\nexport const FETCH_COUNTRIES_FAILED = 'FETCH_COUNTRIES_FAILED'\nexport const FETCH_COUNTRIES_SUCCEEDED = 'FETCH_COUNTRIES_SUCCEEDED'\nexport const ADD_COUNTRY_REQUEST = 'ADD_COUNTRY_REQUEST'\nexport const ADD_COUNTRY_SUCCEED = 'ADD_COUNTRY_SUCCEED'\nexport const LOAD_IN_CART = 'LOAD_IN_CART'\n\n// Enum\nexport enum DialogType {\n  SignIn = 'signIn',\n  SignUp = 'signUp',\n}\n\n// A product\nexport type Product = {\n  id: string\n  name: string\n  price: number\n}\n\nexport type AddProductAction = {\n  type: typeof ADD_PRODUCT\n  payload: {\n    product: Product\n  }\n}\n\nexport type RemoveProductAction = {\n  type: typeof REMOVE_PRODUCT\n  payload: {\n    product: Product\n  }\n}\n\nexport type ToggleDialogAction = {\n  type: typeof TOGGLE_DIALOG\n  payload: {\n    dialog: DialogType\n  }\n}\n\nexport type Countries = {\n  name: string\n  flag: string\n  population: number\n  languages: nativeName[]\n  region: string\n}\n\nexport type FetchCountriesRequestedAction = {\n  type: typeof FETCH_COUNTRIES_REQUESTED\n}\n\nexport type FetchCountriesSucceededAction = {\n  type: typeof FETCH_COUNTRIES_SUCCEEDED\n  payload: {\n    countries: []\n  }\n}\n\nexport type FetchCountriesFailedAction = {\n  type: typeof FETCH_COUNTRIES_FAILED\n  payload: {\n    error: { message: string }\n  }\n}\n\nexport type AddCountryRequest = {\n  type: typeof ADD_COUNTRY_REQUEST\n  payload: {\n    country: Countries\n  }\n}\nexport type AddCountrySuceeded = {\n  type: typeof ADD_COUNTRY_SUCCEED\n  payload: {\n    country: Countries\n  }\n}\n\nexport type LoadingInCart = {\n  type: typeof LOAD_IN_CART\n}\n\nexport type CountriesActions =\n  | FetchCountriesRequestedAction\n  | FetchCountriesSucceededAction\n  | FetchCountriesFailedAction\n  | AddCountryRequest\n  | AddCountrySuceeded\n  | LoadingInCart\n\nexport type UiActions = ToggleDialogAction\n\n// Use this union in reducer\nexport type ProductActions = AddProductAction | RemoveProductAction\n\nexport type ProductState = {\n  inCart: Product[]\n}\n\n// Using dynamic keys from an enum\nexport type UiState = {\n  dialogOpen: {\n    [key in DialogType]?: boolean\n  }\n}\n\nexport type CountriesState = {\n  inCart: Countries[]\n  countries: Countries[]\n  loading: boolean\n}\n\nexport type AppState = {\n  product: ProductState\n  ui: UiState\n  list: CountriesState\n}\n","import {\n  FETCH_COUNTRIES_SUCCEEDED,\n  FETCH_COUNTRIES_REQUESTED,\n  CountriesActions,\n  ADD_COUNTRY_REQUEST,\n  Countries,\n  LOAD_IN_CART,\n} from '../../types'\n\nexport const getCountriesRequest = (\n  payload: {\n    uri: string\n  },\n  next: () => void,\n  nextError: () => void\n) => {\n  return {\n    type: FETCH_COUNTRIES_REQUESTED,\n    payload: {\n      uri: payload.uri,\n      params: payload,\n      // opt: { method: \"GET\" },\n      beforeCallType: FETCH_COUNTRIES_REQUESTED,\n      successType: FETCH_COUNTRIES_SUCCEEDED,\n      afterSuccess: next,\n      afterError: nextError,\n    },\n  }\n}\n\nexport const addCountryToCartRequest = (payload: {\n  country: Countries\n}): CountriesActions => {\n  return {\n    type: ADD_COUNTRY_REQUEST,\n    payload: {\n      country: payload.country,\n    },\n  }\n}\n\nexport const loadingInCartDAta = () => {\n  return {\n    type: LOAD_IN_CART,\n  }\n}\n","import React from 'react'\nimport clsx from 'clsx'\n\nimport styles from './Loading.module.css'\n\nexport interface ILoadingProps {\n  classes?: {\n    wrapper?: string\n    loader?: string\n  }\n}\n\nconst Loading: React.FC<ILoadingProps> = ({ classes = {} }: ILoadingProps) => {\n  return (\n    <div className={clsx(styles.wrapper, classes.wrapper)}>\n      <div className={clsx(styles.loader, classes.loader)}></div>\n    </div>\n  )\n}\nexport default Loading\n","import React from 'react'\n\nimport Card from '../../components/Card'\nimport { CardMedia, Typography } from '@material-ui/core'\nimport useStyles from './Country.module'\nimport Button from '../../components/Button'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addCountryToCartRequest } from '../../redux/actions'\nimport { Countries as CountryType, AppState } from '../../types'\nimport Loading from '../../components/Loading'\n\nexport type nativeName = { nativeName: string }\n\nexport interface ICountryProps {\n  name: string\n  flag: string\n  languague: nativeName[]\n  region: string\n  country: CountryType\n  className?: string\n}\n\nconst Country: React.FC<ICountryProps> = ({\n  name,\n  flag,\n  region,\n  languague,\n  country,\n  className,\n}) => {\n  const classes = useStyles()\n  const dispatchAddCountry = useDispatch()\n  const [loading, setLoading] = React.useState(true)\n\n  const handleAddBtn = () => {\n    console.log('addd suceess')\n    dispatchAddCountry(addCountryToCartRequest({ country }))\n  }\n\n  const loadingAddCountry = useSelector((state: AppState) => state.list.loading)\n  React.useEffect(() => {\n    setTimeout(() => {\n      setLoading(loadingAddCountry)\n    }, 1000)\n  }, [loadingAddCountry])\n\n  return (\n    <>\n      {!loading ? (\n        <Card className={classes.wrapper}>\n          <Typography className={classes.name} component=\"a\">\n            {name}\n          </Typography>\n          <CardMedia\n            component=\"img\"\n            className={classes.media}\n            image={flag}\n            title={name}\n          />\n          <Typography className={classes.name} component=\"a\">\n            {languague.map((l) => {\n              const lastIndex = languague[languague.length - 1]\n              if (l !== lastIndex) return l.nativeName + ' - '\n              else return l.nativeName\n            })}\n          </Typography>\n          <Typography className={classes.name} component=\"a\">\n            {region}\n          </Typography>\n          <Button className={classes.button} onClick={handleAddBtn}>\n            Add\n          </Button>\n        </Card>\n      ) : (\n        <Loading />\n      )}\n    </>\n  )\n}\n\nexport default Country\n","import { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: {\n      maxWidth: '1028px',\n      display: 'flex',\n      flexDirection: 'column',\n      border: 'none',\n    },\n  }\n})\n\nexport default useStyles\n","import React from 'react'\nimport Country from '../Country'\nimport useStyles from './Countries.module'\nimport Card from '../../components/Card'\nimport { Countries as CountryType } from '../../types'\nimport { Typography } from '@material-ui/core'\n\nexport interface ICountriesProps {\n  list: CountryType[]\n  searchTerm: string\n}\n\nconst Countries: React.FC<ICountriesProps> = ({\n  list,\n  searchTerm,\n}: ICountriesProps) => {\n  const classes = useStyles()\n\n  const isNullOrWhitespace = (input: string): boolean => {\n    if (typeof input === 'undefined' || input == null) return true\n    return input.replace(/\\s/g, '').length < 1\n  }\n\n  const renderCountries =\n    list.length > 0 &&\n    list.map((c: CountryType) => (\n      <Country\n        country={c}\n        key={c.name}\n        name={c.name}\n        flag={c.flag}\n        region={c.region}\n        languague={c.languages}\n      />\n    ))\n\n  const isNotRenderCountryList = isNullOrWhitespace(searchTerm)\n  console.log(searchTerm)\n  return (\n    <>\n      {isNotRenderCountryList && (\n        <Typography component=\"h2\"> No any country</Typography>\n      )}\n      {!isNotRenderCountryList && (\n        <Card className={classes.root}>{renderCountries}</Card>\n      )}\n    </>\n  )\n}\n\nexport default Countries\n","import React, { SVGAttributes } from 'react'\n\nexport interface Props {}\n\nconst SearchIcon: React.FC = (props: SVGAttributes<HTMLOrSVGElement>) => {\n  return (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\" {...props}>\n      <path\n        d=\"M15.5 14h-.79l-.28-.27A6.471 6.471 0 0 0 16 9.5 6.5 6.5 0 1 0 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n        fill=\"currentColor\"\n        fillRule=\"nonzero\"\n      />\n    </svg>\n  )\n}\nexport default SearchIcon\n","import React, { ChangeEvent } from 'react'\nimport Card from '../../components/Card'\nimport { InputBase, IconButton } from '@material-ui/core'\nimport SearchIcon from '../../components/Icons/Search'\nimport { makeStyles } from '@material-ui/core/styles'\nexport interface ISearchProps {\n  handleSearchChangeProp: (seachChangeTerm: any) => void\n}\n\n// const typingTimeRef = useRef<number | null>()\n\nconst useStyles = makeStyles((theme) => ({\n  wrapperSearch: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginLeft: 'auto',\n    color: 'white',\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  searchIcon: {\n    color: 'white',\n  },\n}))\n\nconst Search: React.FC<ISearchProps> = ({\n  handleSearchChangeProp,\n}: ISearchProps) => {\n  const classes = useStyles()\n\n  const handleSerchChange = (\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    const { value } = e.target\n    handleSearchChangeProp(value)\n  }\n\n  const onSubmit = (e: any) => {\n    e.preventDefault()\n    const { value } = e.target\n    if (value !== '') {\n      console.log('testingggg')\n    }\n  }\n\n  return (\n    <Card className={classes.wrapperSearch}>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Search Coutries\"\n        inputProps={{ 'aria-label': 'Search countries' }}\n        onChange={handleSerchChange}\n      />\n      <IconButton\n        className={classes.iconButton}\n        aria-label=\"Search\"\n        onClick={onSubmit}\n      >\n        <SearchIcon />\n      </IconButton>\n    </Card>\n  )\n}\n\nexport default Search\n","import { useEffect, useState } from 'react'\nimport { getCountriesRequest } from '../redux/actions'\nimport { useDispatch } from 'react-redux'\n\nconst useDispatchCountryLis = (uri: string = '/all') => {\n  const [loading, setLoading] = useState(true)\n\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(\n      getCountriesRequest(\n        {\n          uri,\n        },\n        () => {\n          setLoading(false)\n        },\n        () => setLoading(false)\n      )\n    )\n  }, [dispatch, uri])\n  return [loading, dispatch]\n}\n\nexport default useDispatchCountryLis\n","import React from 'react'\nimport { IconButton, Divider, List, Drawer } from '@material-ui/core'\nimport clsx from 'clsx'\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { AppState } from '../../types'\nimport Country from '../../pages/Country'\nimport { Countries as CountryType } from '../../types'\nimport { loadingInCartDAta } from '../../redux/actions'\n\nexport interface ICartProps {}\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n  cart: {\n    marginLeft: '32px',\n    color: 'white',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth * 3.5,\n  },\n  iconClose: {\n    color: 'black',\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n}))\n\nconst Cart: React.FC<ICartProps> = () => {\n  const classes = useStyles()\n  const [open, setOpen] = React.useState(false)\n  const theme = useTheme()\n  const dispatchInCart = useDispatch()\n\n  React.useEffect(() => {\n    dispatchInCart(loadingInCartDAta())\n  }, [dispatchInCart])\n  const inCart = useSelector((state: AppState) => state.list.inCart)\n\n  const handleDrawerOpen = () => {\n    setOpen(true)\n    dispatchInCart(loadingInCartDAta())\n  }\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n  return (\n    <>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={handleDrawerOpen}\n        edge=\"start\"\n        className={clsx(classes.cart, classes.menuButton, open && classes.hide)}\n      >\n        <ShoppingCartIcon />\n      </IconButton>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"right\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton className={classes.iconClose} onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronRightIcon />\n            ) : (\n              <ChevronLeftIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {inCart.length > 0 &&\n            inCart.map((c: CountryType) => (\n              <Country\n                country={c}\n                key={c.name}\n                name={c.name}\n                flag={c.flag}\n                region={c.region}\n                languague={c.languages}\n              />\n            ))}\n        </List>\n      </Drawer>\n    </>\n  )\n}\nexport default Cart\n","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport List from '@material-ui/core/List'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport InboxIcon from '@material-ui/icons/MoveToInbox'\nimport MailIcon from '@material-ui/icons/Mail'\nimport Countries from '../Countries'\nimport Search from '../Search'\nimport { useSelector } from 'react-redux'\nimport useDispatchCountryLis from '../../hooks/useDispatchCountryList'\nimport { AppState, Countries as CountryType } from '../../types'\nimport Loading from '../../components/Loading'\nimport Cart from '../../components/Cart'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    boxSizing: 'border-box',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  TBar: {\n    maxWidth: '1280px',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: '998px',\n  },\n  wrapperSearch: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginLeft: 'auto',\n    color: 'white',\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n    color: 'white',\n  },\n  iconButton: {\n    padding: 10,\n  },\n  searchIcon: {\n    color: 'white',\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    maxWidth: '1280px',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: '998px',\n    marginTop: '64px',\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}))\n\ninterface IPersistentDrawerLeftProps {}\n\nconst PersistentDrawerLeft: React.FC<IPersistentDrawerLeftProps> = ({}: IPersistentDrawerLeftProps) => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const [open, setOpen] = React.useState(false)\n\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n  const [searchTerm, setSearchTerm] = React.useState<string>('')\n  const [list, setList] = React.useState<CountryType[]>([])\n  const [loading] = useDispatchCountryLis('/all')\n  const contryList = useSelector((state: AppState) => state.list.countries)\n\n  const handleSearchChange = (searchTerm: string) => {\n    setSearchTerm(searchTerm)\n    const filterCountryListBySearchTerm: CountryType[] = contryList.filter(\n      (c) => {\n        console.log(c.name.toUpperCase())\n        return c.name.toLowerCase().includes(searchTerm.toLowerCase())\n      }\n    )\n    setList(filterCountryListBySearchTerm)\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar className={clsx(classes.TBar)}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Integrify\n          </Typography>\n          <Search handleSearchChangeProp={handleSearchChange} />\n          <Cart />\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        {!loading ? (\n          <Countries list={list} searchTerm={searchTerm} />\n        ) : (\n          <Loading />\n        )}\n      </main>\n    </div>\n  )\n}\n\nexport default PersistentDrawerLeft\n","import React from 'react'\n\nimport { ThemeContext } from '../src/contexts/theme.context'\nimport { useTheme } from './hooks/useTheme'\nimport DrawerNav from './pages/DrawerNav'\nimport './App.css'\n\n// const themes = {\n//   light: {\n//     foreground: '#000000',\n//     background: '#eeeeee',\n//   },\n//   dark: {\n//     foreground: '#ffffff',\n//     background: '# 222222',\n//   },\n// }\n\n// export const ThemeContext = React.createContext(themes.light)\n\nexport default function App() {\n  const theme = useTheme()\n  console.log('App-> ', theme)\n\n  return (\n    <>\n      <ThemeContext.Provider value={theme}>\n        <DrawerNav />\n      </ThemeContext.Provider>\n    </>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  ProductState,\n  ProductActions,\n  ADD_PRODUCT,\n  REMOVE_PRODUCT,\n} from '../../types'\n\nexport default function product(\n  state: ProductState = {\n    inCart: [],\n  },\n  action: ProductActions\n): ProductState {\n  switch (action.type) {\n  case ADD_PRODUCT: {\n    const { product } = action.payload\n    if (state.inCart.find(p => p.id === product.id)) {\n      return state\n    }\n    // Always return new state (e.g, new object) if changed\n    return { ...state, inCart: [...state.inCart, product] }\n  }\n\n  case REMOVE_PRODUCT: {\n    const { product } = action.payload\n    const index = state.inCart.findIndex(p => p.id === product.id)\n    if (index >= 0) {\n      state.inCart.splice(index, 1)\n      return { ...state, inCart: [...state.inCart] }\n    }\n    return state\n  }\n\n  default:\n    return state\n  }\n}\n","import { TOGGLE_DIALOG, UiState, UiActions } from '../../types'\n\nconst defaultState: UiState = {\n  dialogOpen: {},\n}\n\nexport default function ui(\n  state: UiState = defaultState,\n  action: UiActions\n): UiState {\n  switch (action.type) {\n  case TOGGLE_DIALOG: {\n    return {\n      ...state,\n      dialogOpen: {\n        ...state.dialogOpen,\n        [action.payload.dialog]: !state.dialogOpen[action.payload.dialog],\n      },\n    }\n  }\n\n  default:\n    return state\n  }\n}\n","import {\n  CountriesActions,\n  CountriesState,\n  Countries,\n  FETCH_COUNTRIES_REQUESTED,\n  FETCH_COUNTRIES_SUCCEEDED,\n  ADD_COUNTRY_REQUEST,\n  Countries as CountryType,\n  ADD_COUNTRY_SUCCEED,\n  LOAD_IN_CART,\n} from '../../types'\n\nexport const initialState: CountriesState = {\n  inCart: [],\n  countries: [],\n  loading: true,\n}\n\nexport default function (\n  state = initialState,\n  action: CountriesActions\n): CountriesState {\n  console.log('action', action)\n  switch (action.type) {\n  case FETCH_COUNTRIES_REQUESTED:\n    return { ...state, ...initialState, loading: true }\n  case FETCH_COUNTRIES_SUCCEEDED: {\n    const countryList = JSON.parse(JSON.stringify(action.payload))\n    const data: Countries[] = countryList.data\n    return { ...state, countries: [...data], loading: false }\n  }\n  case ADD_COUNTRY_REQUEST:\n    const data: CountryType[] = [action.payload.country]\n    let retrievedObject: any = localStorage.getItem('inCart')\n    if (typeof retrievedObject === 'string') {\n      retrievedObject = JSON.parse(retrievedObject)\n    }\n\n    const inCart = [...retrievedObject, ...data]\n    console.log(inCart)\n    localStorage.setItem('inCart', JSON.stringify(inCart))\n    return {\n      ...state,\n      inCart: [...inCart],\n      loading: true,\n    }\n  case ADD_COUNTRY_SUCCEED:\n    return { ...state, loading: false }\n  case LOAD_IN_CART:\n    if (localStorage.getItem('inCart') !== null) {\n      // Retrieve the object from storage\n      let retrievedObject: any = localStorage.getItem('inCart')\n      if (typeof retrievedObject === 'string') {\n        retrievedObject = JSON.parse(retrievedObject)\n      }\n      console.log('retrievedObject: ', retrievedObject)\n\n      console.log('state', state)\n      const inCart = [...retrievedObject]\n      console.log(inCart)\n      localStorage.setItem('inCart', JSON.stringify(inCart))\n      return {\n        ...state,\n        inCart: [...inCart],\n      }\n    } else {\n      const inCart = [...state.inCart]\n      localStorage.setItem('inCart', JSON.stringify(inCart))\n      return {\n        ...state,\n      }\n    }\n  default:\n    return state\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport product from './product'\nimport ui from './ui'\nimport list from './countries'\n\nconst createRootReducer = () =>\n  combineReducers({\n    product,\n    ui,\n    list,\n  })\n\nexport default createRootReducer\n","import { takeLatest } from 'redux-saga/effects'\n\nimport { ADD_PRODUCT, AddProductAction } from '../../types'\n\nfunction* doSomethingWhenAddingProduct(action: AddProductAction) {\n  yield console.log(action)\n}\n\nexport default [takeLatest(ADD_PRODUCT, doSomethingWhenAddingProduct)]\n","import { takeLatest } from 'redux-saga/effects'\n\nimport {\n  TOGGLE_DIALOG,\n  ToggleDialogAction,\n} from '../../types'\n\nfunction* doSomethingWhenDialogOpen(action: ToggleDialogAction) {\n  yield console.log(action)\n}\n\nexport default [\n  takeLatest(TOGGLE_DIALOG, doSomethingWhenDialogOpen),\n]\n","import axios from 'axios'\nimport { Countries } from '../../types'\n\nexport interface FetchGetCountriesResponse {\n  data: Countries\n}\n\nexport default function fetchGetCompanyDetail(uri: string) {\n  return axios.get<FetchGetCountriesResponse>(\n    `https://restcountries.eu/rest/v2${uri}`\n  )\n}\n","import { takeEvery, call, put, all, fork, delay } from 'redux-saga/effects'\n\nimport fetchApi from '../utils/apis'\nimport {\n  FETCH_COUNTRIES_REQUESTED,\n  ADD_COUNTRY_REQUEST,\n  ADD_COUNTRY_SUCCEED,\n} from '../../types'\n\nfunction* callApi(action: any) {\n  if (action.payload) {\n    const {\n      successType,\n      beforeCallType,\n      afterSuccess,\n      afterError,\n      uri,\n    } = action.payload\n    console.log('action.payload', uri)\n    if (beforeCallType) {\n      yield put({ type: beforeCallType })\n    }\n\n    const response = yield call(fetchApi, uri)\n\n    if (response && !response.error) {\n      if (successType) {\n        yield put({ type: successType, payload: response })\n      }\n\n      if (typeof afterSuccess === 'function') {\n        afterSuccess(response)\n      }\n    } else {\n      if (typeof afterError === 'function') {\n        afterError(response.error)\n      }\n    }\n  }\n}\n\nfunction* addCountryToCart() {\n  // yield take(ADD_COUNTRY_REQUEST)\n  yield delay(1000)\n  yield put({ type: ADD_COUNTRY_SUCCEED })\n}\n\nfunction* watchCountries() {\n  yield takeEvery(FETCH_COUNTRIES_REQUESTED, callApi)\n  yield takeEvery(ADD_COUNTRY_REQUEST, addCountryToCart)\n}\n\nexport default function* companiesSagas() {\n  yield all([fork(watchCountries)])\n}\n","import { all, fork } from 'redux-saga/effects'\n\nimport productSagas from './product'\nimport uiSagas from './ui'\nimport companiesSagas from './countries'\n\nexport default function* rootSaga() {\n  yield all([fork(companiesSagas)])\n  yield all([...productSagas, ...uiSagas])\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport thunk from 'redux-thunk'\n\nimport { AppState } from '../types'\nimport createRootReducer from './reducers'\nimport rootSaga from './sagas'\n\nconst initState: AppState = {\n  product: {\n    inCart: [],\n  },\n  ui: {\n    dialogOpen: {},\n  },\n  list: {\n    inCart: [],\n    countries: [],\n    loading: true,\n  },\n}\n\nexport default function makeStore(initialState = initState) {\n  const sagaMiddleware = createSagaMiddleware()\n  const middlewares = [sagaMiddleware, thunk]\n  let composeEnhancers = compose\n\n  if (process.env.NODE_ENV === 'development') {\n    if ((window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n      composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    }\n  }\n\n  const store = createStore(\n    createRootReducer(),\n    initialState,\n    composeEnhancers(applyMiddleware(...middlewares))\n  )\n\n  sagaMiddleware.run(rootSaga)\n\n  if ((module as any).hot) {\n    ;(module as any).hot.accept('./reducers', () => {\n      const nextReducer = require('./reducers').default\n      store.replaceReducer(nextReducer)\n    })\n  }\n\n  return store\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport makeStore from './redux/store'\n\nconst store = makeStore()\n\nconst WithProvider = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n)\n\nReactDOM.render(<WithProvider />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"typo\":\"Typo_typo__3Qmw0\",\"h1\":\"Typo_h1__6v9SK\",\"h2\":\"Typo_h2__-tjYN\",\"h3\":\"Typo_h3__2Y4MY\",\"h4\":\"Typo_h4__uqaVc\",\"h5\":\"Typo_h5__2ujQd\",\"body1\":\"Typo_body1__3P4Bt\",\"body2\":\"Typo_body2__2of2f\",\"button\":\"Typo_button__L9p2c\",\"subTitle\":\"Typo_subTitle__2r32o\",\"inherit\":\"Typo_inherit__2MO40\",\"black\":\"Typo_black__3Ka4i\",\"greyDark\":\"Typo_greyDark__Db4IK\",\"greyMedium\":\"Typo_greyMedium__2j6-8\",\"white\":\"Typo_white__3bHDi\",\"blue\":\"Typo_blue__HhUkS\",\"red\":\"Typo_red__2CeDb\",\"left\":\"Typo_left__1md4R\",\"middle\":\"Typo_middle__1EW0d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Button_wrap__RhofC\",\"secondary\":\"Button_secondary__2t2Od\",\"icon\":\"Button_icon__23JL_\",\"primary\":\"Button_primary__1mTxz\",\"big\":\"Button_big__1_QLS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Loading_wrapper__e0Z41\",\"loader\":\"Loading_loader__fHWHo\",\"spin\":\"Loading_spin__27TzB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1eE8R\"};"],"sourceRoot":""}